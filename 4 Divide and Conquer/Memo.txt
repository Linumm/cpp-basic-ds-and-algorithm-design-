IV. DIVIDE AND CONQUER

-if the problem can be solved with polynomial-time algorithm, then it is called "Class P"
 there're other things
    -NP(non-deterministic polynomial time) : it can be proved in p time but there're no known solution
    -EXPTIME(exponential time)
    -PSPACE(polynomial space)


<4.2 Binary Search>
-If the given sequence is well-sorted, then we can use binary Search
-Simply, get the median of sequence, and compare. repeat this until the target is found.


<4.3>
-Divide : Divide to several sub problem that can be solved in same way
-Conquer : get an answer
-Combine : combine answers from sub problem to get a solution


<4.4 Sorting algorithm with Divide-and-Conquer>
-The requirement to Sort algorithm
    1) General to all data type
    2) Handle huge amount of data (even more than computer's main memory)
    3) Speed (Time complexity)


<4.4.3 Quick Sort>
-Goal of quick sort is to reduce average time complexity.
-Its basic idea is same with Merge sort, but the point is "dividing"
    1) Set one random element as a "pivot"
    2) Divide to two vectors, Left one is same or smaller than pivot element and right one is bigger than pivot.

-Time, can be different by how to choose pivot.
    1) if pivot value is not close to median, then divided vectors' size must be unbalanced -> recursion tree getting deeper -> time consume up

-Time complexity[Merge, Quick]:
    1) Best case : O(nlogn), O(nlogn)
    2) Worst case : OM(nlogn), OM(n^2)